// Code generated by go-bindata.
// sources:
// layout/footer.tmpl
// layout/header.tmpl
// layout/header_admin.tmpl
// layout/layout.tmpl
// view/admin/index.tmpl
// view/admin/logged_in.tmpl
// view/admin/two_factor_auth_key.tmpl
// view/admin/user.tmpl
// view/auth/index.tmpl
// view/auth/logged_in.tmpl
// view/auth/two_factor_auth.tmpl
// view/index.tmpl
// DO NOT EDIT!

package template

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _layoutFooterTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xce\x41\x6a\xc5\x20\x10\x06\xe0\xbd\xa7\x18\xdc\x37\xb6\xdb\xd6\xe7\xae\x27\xe8\x09\xc4\x99\xf7\x10\x82\x09\x8e\x0d\x09\xc3\xdc\xbd\x44\x9b\x42\x17\x85\xba\x10\x94\xff\xff\x66\x44\x00\xe9\x9e\x0b\x81\xbd\x2f\x4b\xa3\x6a\x41\xd5\x78\x6e\xc7\x4c\xd0\x8e\x95\x6e\xb6\xd1\xde\x5c\x62\xb6\xc1\x00\x00\x4c\x23\x07\xd2\x5f\xe7\x59\x23\x62\x2e\x8f\x57\x78\x79\x5e\xf7\xb7\xfe\xad\xc6\xbb\x6e\x04\x63\xfc\x77\x21\xcd\x91\xf9\x76\x8d\x19\x98\x48\x8d\xe5\x41\x30\xbd\xd7\xba\x54\xd5\x1f\xd3\x63\xde\xae\x46\x9c\xa9\x36\xe8\xf7\x13\x9e\xf1\x6a\x83\xc8\xa4\xea\x1d\xe6\xed\x82\xa8\xa0\xaa\xf9\xad\x7e\x7c\xa6\x44\xcc\xff\x70\x79\x24\xff\x86\xbd\x1b\x8b\x07\x23\x02\x54\x10\x54\xbf\x02\x00\x00\xff\xff\xf7\xea\xa0\xc3\x3c\x01\x00\x00")

func layoutFooterTmplBytes() ([]byte, error) {
	return bindataRead(
		_layoutFooterTmpl,
		"layout/footer.tmpl",
	)
}

func layoutFooterTmpl() (*asset, error) {
	bytes, err := layoutFooterTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "layout/footer.tmpl", size: 316, mode: os.FileMode(420), modTime: time.Unix(1520592654, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _layoutHeaderTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x4d\x5b\x0e\xc2\x30\x0c\xfb\xcf\x29\xac\x1e\x80\xc2\x2f\x74\xbd\x4b\xb5\x04\x98\x34\x55\x15\xe9\xc7\xa6\x28\x77\x47\x74\xcc\x5f\xb6\xe5\x87\x19\x58\x9e\x4b\x15\x84\xb7\x14\x96\x4f\x80\x3b\x25\xed\xfb\x2a\xe8\x7b\x93\x29\x74\xd9\x7a\x9c\x55\x43\x26\x00\xb8\x1c\x39\xd8\x50\x3f\xb4\xc2\xbc\xd4\xd7\x1d\xb7\x6b\xdb\x1e\xc3\x76\x4a\x71\x6c\x64\xa2\xf4\x2f\xcc\x6b\x51\x9d\xce\x9b\x4c\x29\x1e\x34\x93\x19\xa4\x32\xdc\xbf\x01\x00\x00\xff\xff\x57\x43\x1e\x8f\x8e\x00\x00\x00")

func layoutHeaderTmplBytes() ([]byte, error) {
	return bindataRead(
		_layoutHeaderTmpl,
		"layout/header.tmpl",
	)
}

func layoutHeaderTmpl() (*asset, error) {
	bytes, err := layoutHeaderTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "layout/header.tmpl", size: 142, mode: os.FileMode(420), modTime: time.Unix(1520592654, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _layoutHeader_adminTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8f\xc1\x6a\xc3\x30\x0c\x86\xef\x7e\x0a\xe1\xbb\x70\xd9\x39\xf5\x2b\xec\xb0\xdd\x8b\x5c\x2b\xae\xb7\x58\x2e\xb6\xd2\xad\x84\xbc\xfb\x58\xd3\x0c\x76\x92\x40\x7c\xdf\xff\x6b\x59\x20\xf2\x98\x85\xc1\x5e\x98\x22\xb7\x13\xc5\x92\xc5\xc2\xba\x1a\x33\x08\xdd\xe0\x3c\x51\xef\x47\x2b\x74\x0b\xd4\x60\x1b\xc8\xdf\x57\x92\x88\xbd\x40\x48\x18\xa9\x7d\xee\x87\xc7\xfe\x31\x77\xcd\xe3\x1d\xcf\x55\x94\x45\x31\xb0\x7e\x31\x8b\xf5\x06\x00\x60\xa0\xff\x4e\x0c\x8d\x24\x5a\xb8\x34\x1e\x8f\xd6\x3d\xf2\xdd\x54\x53\xe2\x78\xca\x62\xfd\x7b\xbd\x0e\x8e\xbc\xd9\xe0\xb1\xb6\xb2\xf3\xe5\x8e\x2f\x50\xee\x38\x25\x3c\x58\xa0\xb3\xe6\x2a\x7f\x86\x9e\x93\x9c\xea\xac\x16\x0a\xeb\xa5\xc6\xa3\xbd\xd6\xae\xcf\x0e\x0f\x55\x98\x55\xab\xec\xb2\xa0\x02\x41\x05\xeb\xac\x53\x16\xc6\x2c\x63\x85\x3d\xa1\x17\x3c\x58\xff\x96\x93\xbc\xce\x3a\xb8\x8d\x7c\xbe\xe3\x7e\x2b\x79\x33\x38\xa1\x9b\x37\x66\x59\x80\x25\xc2\xba\xfe\x04\x00\x00\xff\xff\xc8\xac\xbf\xc1\x5b\x01\x00\x00")

func layoutHeader_adminTmplBytes() ([]byte, error) {
	return bindataRead(
		_layoutHeader_adminTmpl,
		"layout/header_admin.tmpl",
	)
}

func layoutHeader_adminTmpl() (*asset, error) {
	bytes, err := layoutHeader_adminTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "layout/header_admin.tmpl", size: 347, mode: os.FileMode(420), modTime: time.Unix(1522048554, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _layoutLayoutTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x93\xd1\x6e\xda\x3c\x18\x86\xcf\xb9\x0a\xff\x3e\xad\x6a\x03\x81\x00\xbf\x02\x52\xd6\x92\xac\x64\xa5\x09\x94\x12\x7a\x66\x12\x27\x71\x88\xe3\xd4\x76\x28\x59\xd5\x7b\x9f\x80\x6d\x95\xa6\x76\xaa\xb4\x23\xdb\xaf\xbf\x83\xe7\x91\xbe\xd7\xfa\xef\xfa\xee\xea\x7e\xe3\x4f\x41\xa6\x79\x31\x69\x59\xc7\x03\x14\xa4\x4c\xc7\x30\x27\xf0\x18\x50\x12\x4f\x5a\x00\x00\x60\x71\xaa\x09\x88\x32\x22\x15\xd5\x63\x58\xeb\xe4\x72\x08\x27\xad\xf3\x5f\xc1\xca\x1d\x90\xb4\x18\x43\xa5\x9b\x82\xaa\x8c\x52\x0d\x41\x26\x69\x32\x86\x99\xd6\x95\xfa\x1f\x63\x4e\x0e\x51\x5c\xa2\xad\x10\x5a\x69\x49\xaa\xe3\x23\x12\x1c\xff\x0e\x70\x0f\xb5\x51\x1b\x47\x4a\xbd\x65\x88\xb3\x12\x45\x4a\x41\xc0\x4a\x4d\x53\xc9\x74\x33\x86\x2a\x23\xc6\xb0\x77\xe9\x96\x7d\x63\xd8\x3b\x3c\x05\x1d\x22\xd6\xa1\x7d\xd1\xee\x0f\x17\xa1\x7f\xf0\x53\x33\x69\x7a\x37\xeb\xfd\xfd\x3c\x6b\x4f\xbb\xa6\x11\x72\x27\x9a\x15\x4b\xfb\x99\xb9\xa9\x63\xaf\x71\x6c\xb3\xa5\x39\x0b\x39\x04\x91\x14\x4a\x09\xc9\x52\x56\x8e\x21\x29\x45\xd9\x70\x51\x2b\xf8\x53\x58\x45\x92\x55\x1a\x28\x19\xbd\x49\x44\x22\xa6\x28\x7f\xaa\xa9\x6c\x4e\xf0\xe7\xeb\xa5\x81\xba\xa8\x83\x54\xc1\xf8\x09\x38\x7f\x97\xd7\x9b\x19\xa2\x7b\xed\xe9\x9b\xdd\x7e\x73\xe3\x19\xab\xe9\xfc\x3b\xbf\x1d\x78\x57\xbb\x85\xc4\x72\x3a\xc2\x41\x95\x9a\xc4\x7e\x74\x67\xcf\xce\xf5\xed\xc3\xdc\xc6\x6e\xe5\x3a\xce\xc8\xc8\xc2\xca\xed\x7b\xbb\xf9\xc7\xbc\x16\x3e\xb3\xfe\x0d\x3c\x2e\x73\x85\xa2\x42\xd4\x71\x52\x10\x49\x4f\xf4\x24\x27\x07\x5c\xb0\xad\xc2\x95\xa8\x2a\x2a\x51\xae\x70\x07\x75\xba\x68\x84\x6b\x1e\xff\x0a\x3f\x36\xb2\xab\xf9\x36\xcd\x46\x5f\x2e\x36\x9d\xc0\xd3\x7b\x63\x51\x0e\xd6\x06\x4f\xfd\x43\xb6\x1a\x79\x78\x19\x05\xca\xf6\x07\xd9\x8a\x6d\x43\x63\x94\x0f\x12\xb2\x73\x7c\xb5\xdb\x87\xb5\xda\x27\xa4\xbd\xed\x05\xff\x64\xf4\xd9\x7d\xca\xff\x5c\xa7\xf7\x5d\x66\x8f\x0b\x73\x59\xd1\x3c\xeb\xad\xda\xdd\x78\x98\xdf\x69\x73\xff\x6d\xfa\x35\xa1\x78\x16\xb8\x6c\xb1\x58\x06\xc1\x61\x99\x38\xeb\x8a\x75\x6e\x9f\xea\x87\xd8\x6e\xf2\x15\x91\xfd\x8b\x81\xe9\x3f\x5c\xf1\x4d\xf1\x19\x17\x0b\x9f\xfb\x64\x6d\x45\xdc\x4c\x5a\x2f\x2f\x40\x53\x5e\x15\x44\x53\x00\x23\x51\x6a\x5a\x6a\x08\x10\x78\x7d\x6d\x59\xf8\x3c\x62\xe1\x53\x33\x7f\x04\x00\x00\xff\xff\x19\x3a\x76\x04\xa9\x03\x00\x00")

func layoutLayoutTmplBytes() ([]byte, error) {
	return bindataRead(
		_layoutLayoutTmpl,
		"layout/layout.tmpl",
	)
}

func layoutLayoutTmpl() (*asset, error) {
	bytes, err := layoutLayoutTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "layout/layout.tmpl", size: 937, mode: os.FileMode(420), modTime: time.Unix(1520592654, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _viewAdminIndexTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x92\xc1\x6a\xc3\x30\x0c\x86\xef\x79\x0a\xa1\x7b\x97\x17\x48\x72\xdf\x6d\xb0\x07\x18\x4e\xac\xb4\x02\x5b\x32\x8e\xd2\x51\x42\xde\x7d\x24\x4d\x9b\x76\x50\x76\xd8\xc5\xc8\xf6\xaf\xff\xd7\x07\x9a\x26\xf0\xd4\xb3\x10\x60\xa7\x62\x24\x86\x30\xcf\x45\x31\x4d\x60\x14\x53\x70\x46\x80\x27\x72\x9e\x32\xc2\xdb\xfa\x55\x79\x3e\x43\x17\xdc\x30\xd4\x6b\x8f\x63\xa1\x7c\xe8\xc3\xc8\x1e\x9b\x02\x00\xa0\xea\x35\xc7\x9b\x64\xa9\x0f\xc7\xac\x63\x42\x70\x9d\xb1\x4a\x8d\xa5\xf3\x91\xa5\x1c\xf8\x28\x5f\x2c\x08\x91\xec\xa4\xbe\xc6\xa4\x83\x6d\x1e\xab\xcf\x43\xd2\x83\xcd\x2e\x58\x45\xc1\xb5\x14\xa0\xd7\x5c\x63\x74\x1c\xb0\x59\xce\xaa\x5c\x9f\x7f\x49\x59\xd2\x68\x60\x97\x44\x35\xd2\x2a\x7e\xb2\x5f\x68\xb2\x06\x04\xf6\x9b\x17\x88\x8b\x74\xab\x53\x70\x1d\x9d\x34\x78\xba\x47\xed\xa3\x96\x9e\xcf\xff\x98\x3c\xb9\x61\xf8\xd6\xec\xb1\xf9\xd8\xaa\xbf\x09\xee\x3d\xaf\x21\x76\xc9\x15\x64\xbf\x3f\xc1\xec\xe9\x2f\x81\xda\xd1\x4c\x65\x4b\x1e\xc6\x36\xb2\xdd\x73\x5b\x13\x68\x4d\x0e\x29\x73\x74\xf9\x82\xcd\x27\x1f\xe5\x5d\xaa\xf2\xda\xb4\x2d\x45\xb9\x8c\xd7\x14\x9b\xf1\xf3\x86\xf5\xaa\xb6\x6f\xd8\x34\x01\x89\x87\x79\xfe\x09\x00\x00\xff\xff\xef\xb0\x36\xe3\x9e\x02\x00\x00")

func viewAdminIndexTmplBytes() ([]byte, error) {
	return bindataRead(
		_viewAdminIndexTmpl,
		"view/admin/index.tmpl",
	)
}

func viewAdminIndexTmpl() (*asset, error) {
	bytes, err := viewAdminIndexTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "view/admin/index.tmpl", size: 670, mode: os.FileMode(420), modTime: time.Unix(1520592654, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _viewAdminLogged_inTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x93\x3f\x8f\xa3\x3c\x10\xc6\x7b\x3e\xc5\x88\xde\x21\x29\xb6\x79\x5f\x12\x69\x9b\xab\x4f\xb7\xb7\x75\xe4\xe0\x01\xe6\x64\xc6\xc8\x1e\xe7\x8f\x2c\xbe\xfb\x09\x8b\xd5\x26\x6c\xae\xbb\xa3\x01\x33\x7e\x9e\x79\xe6\x27\x3b\x25\x30\xd8\x12\x23\x94\x8d\x63\x41\x96\x12\xa6\xa9\x28\x52\x02\xc1\x61\xb4\x5a\x10\xca\x1e\xb5\x41\x5f\xc2\x26\x97\xea\x20\x37\x8b\x20\xb7\x11\xf7\xa5\xe0\x55\xaa\x26\x84\xf2\x50\x00\x00\xb0\x3e\x43\xca\x5f\xf3\x33\x68\xdf\x11\xab\x93\x13\x71\xc3\x7f\xb0\xdb\x8e\xd7\xff\x73\x71\x2a\xea\x2a\xbb\x1c\x8a\xa2\x36\x74\x86\xc6\xea\x10\xf6\x39\x82\x26\x46\xaf\x5a\x1b\xc9\x2c\xa6\x4f\xb2\x1c\xb5\x19\x88\x3f\x12\xcd\x9b\xee\x6d\x2c\x05\x51\x9d\x77\x71\x5c\x1c\xf2\x06\x0d\xbd\xc7\x76\x5f\x56\x59\x5b\xc9\xc5\x1d\x5b\xdd\x88\xf3\x47\x1d\xa5\x2f\xbf\x8a\x15\x09\x0e\xb0\x5a\x2b\xdd\x08\x39\x86\xd6\xe2\x55\x35\xce\xc6\x81\x41\x5b\xea\x38\x57\x83\x0a\xa2\xbd\xdc\xb5\x5d\x67\x33\x6a\x56\xc2\x45\xed\xb6\x5b\xf8\x15\x83\x50\x7b\x53\x0b\x7a\x75\x42\xb9\x20\xf2\x4a\x9e\x2d\xfa\x97\x0f\x87\xe1\xa4\x76\xe5\xe1\x0d\x9b\xe8\x49\x6e\x75\xd5\xbf\xac\xba\x55\x86\xce\xab\x5f\xe3\xa3\xf8\xe7\xc5\x7d\xcb\xa3\xbf\x46\xe9\x21\xa0\x08\x71\x57\x57\xe3\x1d\xad\x4a\x7f\x2e\x52\xa2\x16\x36\x3f\x9c\xc5\xcd\x77\xf4\x03\x85\x40\x8e\x5f\x67\x8a\xef\x01\xfd\x1b\x75\xfc\x3e\x4e\xd3\x63\xc7\x15\xed\x18\xe6\x03\xf4\xef\x10\xff\x25\xcc\x4f\x51\xcf\x43\x7e\xc5\xfc\x07\xd4\xcf\x70\xcf\x06\x79\x48\xd0\x6c\x20\x50\xc7\x10\xc7\x07\xdc\x4f\x90\x23\x9b\x85\xe9\xd2\x65\x79\x3d\x5e\xcd\xd6\x39\xf9\xbc\x9a\x29\x01\xb2\x81\x69\xfa\x1d\x00\x00\xff\xff\x55\x43\xeb\x8e\xd7\x03\x00\x00")

func viewAdminLogged_inTmplBytes() ([]byte, error) {
	return bindataRead(
		_viewAdminLogged_inTmpl,
		"view/admin/logged_in.tmpl",
	)
}

func viewAdminLogged_inTmpl() (*asset, error) {
	bytes, err := viewAdminLogged_inTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "view/admin/logged_in.tmpl", size: 983, mode: os.FileMode(420), modTime: time.Unix(1522048021, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _viewAdminTwo_factor_auth_keyTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x56\x5b\x6f\xdb\xb8\x12\x7e\xf7\xaf\x18\xe8\xe0\x9c\xb4\x40\x69\x25\x4e\xdc\xd3\xca\x96\x8b\xbd\x00\x7d\x28\x8a\xde\xf6\x3d\x18\x89\x23\x99\x0d\x45\x12\xe4\xc8\x8e\xd7\xf0\x7f\x5f\x50\xb2\xd6\x76\xec\x5e\xb0\xeb\x17\x4b\xc3\xe1\xcc\x7c\x17\x4a\xda\x6e\x41\x52\xa5\x0c\x41\x52\x5a\xc3\x64\x38\x81\xdd\x6e\x34\xda\x6e\x81\xa9\x71\x1a\x99\x20\x59\x12\x4a\xf2\x09\x8c\xbb\xa5\x79\xe0\x8d\x26\xe0\x8d\xa3\x3c\x61\x7a\xe4\xb4\x0c\x21\x59\x8c\x00\x00\xac\x86\x6d\x77\x11\x7f\xa5\x6d\x0d\x93\x17\x9e\x02\x71\x06\xcd\x46\xec\x23\xb3\xbf\x53\xb4\x0a\x2c\xba\x7a\x19\x18\x6b\xe8\xb0\xe2\x50\x4a\x65\xea\x0c\xae\xfb\xd8\x6e\x34\xea\x37\x1c\x35\x68\xd0\xd7\xca\x88\xc2\x32\xdb\x26\x83\x9b\x6b\xf7\x78\x56\x40\x68\xaa\x38\x83\xdb\xd3\x35\x1b\x14\x2b\x6b\x32\xf0\xa4\x91\xd5\x8a\x86\x26\x7d\x8f\xac\xa0\xca\x7a\x3a\xc1\xd2\x91\x93\x0d\xa0\x9e\x1d\xd0\x3c\x9f\x9d\x21\x56\xa6\xf4\xd4\x74\xf9\x97\x50\x17\x58\x3e\xd4\xde\xb6\x46\x8a\xd2\x6a\xeb\x33\xf8\x4f\x81\x12\xa7\xd3\xe3\x4a\x7d\x7c\x32\x99\x1c\x82\x52\x05\xa7\x71\x93\x41\xa1\x6d\xf9\x70\x88\x57\xda\x22\x67\x10\x91\x1e\x53\x6b\x48\x2c\x49\xd5\x4b\xce\x60\x32\x39\x86\xbf\xe7\xad\x67\x46\x9c\x52\x13\x05\x15\xa8\x55\x6d\x32\x28\xe9\x74\xee\xcb\xd5\xd6\x4a\xf2\xf2\x69\xb0\xb0\x5e\x46\xe9\x51\xaa\x36\x64\x30\xbd\xfe\xef\xc0\xf0\x3c\xed\xf4\x5e\x8c\x46\x73\xa9\x56\x50\x6a\x0c\x21\xef\xcc\x87\xca\x90\x17\x95\x6e\x95\xdc\xdb\xe9\x82\x0b\xef\x51\x36\xca\x0c\x5e\x8c\x49\x73\xab\x87\x2a\x0d\x8b\xbb\xfd\xd6\x6e\x45\xab\xc3\x4d\x17\x70\xa7\xf7\xf1\xf7\xbb\x5d\x1b\x6d\x51\xc2\x2f\x2d\x2f\xc9\xb0\x2a\x31\x5a\x03\xd0\xb9\xf1\xe9\xe6\xf4\xc9\xee\xe3\xf9\xbd\x5d\x27\xe7\xb5\xe7\x08\x4b\x4f\x55\x9e\x2c\x99\x5d\xc8\xd2\x54\x71\x6b\x28\x8c\xd1\x39\x4d\xe3\xd2\x36\xe9\x57\x97\xa2\x73\x69\x6d\x6d\xad\x49\xe0\x61\x04\xeb\x53\x25\x6f\x5f\xbd\xba\x7b\xfd\xff\x97\xd7\xd3\x37\x0d\xe7\xaf\x12\xe8\x98\xcb\x93\xc1\x07\xca\x74\x22\xf7\x6e\xb0\x2b\xf2\x95\xb6\xeb\x6c\xa9\xa4\x24\x33\x3b\x98\x2c\x6b\xbd\x7e\x36\x4c\xa0\x95\x79\x68\xf0\x81\xfc\xf8\x6c\x16\x0c\x81\x38\xa4\x61\x89\x9e\x64\x5a\xa0\xac\x29\xa4\x64\x44\x1b\xe2\x8c\x81\xad\x27\xa1\x7d\x3d\x0e\xab\xfa\x39\x18\x2b\x3c\x39\x42\x9e\xf5\xfa\xdf\xdc\x4e\xdd\xe3\x6c\xef\x90\xbb\x68\xa9\xde\x65\xd9\x6b\xf7\x78\x34\x8b\x08\xea\x4f\xca\xf6\x6a\xcf\x92\xc5\x3c\xc5\x6f\xd3\x76\x35\x0c\x1d\xd1\x8e\x7b\x8e\xba\x49\xbb\x59\xba\xa1\x52\x49\x8c\x4a\x87\x37\x4a\xe6\xa5\x6d\x86\x24\x34\xd2\x5b\x25\x23\xb8\x30\x3e\x61\x75\xf2\x3f\x57\x62\xe3\x50\xd5\x46\xc9\xfc\xfd\xbb\x3f\xc4\x07\x5e\x92\x17\xb5\xb6\x05\x6a\x81\x5a\x8b\xd2\x0a\xe7\xd9\x78\xe1\x36\xe2\x23\x7a\xfe\x35\x32\x21\xde\xa3\x9f\x4c\x6f\xa6\xe2\xe6\x6a\x31\x57\x4d\x0d\xa8\x39\xbf\x7a\x4b\x0c\x8a\xc1\x1a\x78\xdb\x35\x86\x8f\x1a\x37\x57\x10\x7c\xf9\xed\xe1\x95\x61\x9d\x92\xb9\x6f\xc3\xc0\xb1\x6a\x30\xfe\xd5\x64\xc8\xab\x32\xae\x75\x0b\xf7\x6b\x2a\xee\xf7\xc1\xb1\x33\xf5\x55\x7f\xd4\xf2\xe4\x66\x7a\x9b\xa4\xe7\xd4\xcd\x53\xa9\x56\x47\xee\x4f\x8f\xed\xff\x53\x67\xe1\x83\x23\x03\xbc\x24\xc0\xb3\xb3\x00\x68\x24\x74\xe7\x24\xae\x7f\xfa\x0c\xa5\x95\xf4\xef\x0f\x48\x64\x32\xb2\x95\x48\x64\xcc\x3a\x22\xd2\xaf\xae\x9e\x15\x18\xe8\xe5\xdd\x8b\xed\x76\xfc\xe9\xf3\x6e\x97\x7c\x17\xe8\xd3\x56\x95\xf5\x8d\x88\x76\x73\x97\x3a\xba\xc5\x07\xff\x02\x1a\x34\x2d\x6a\xbd\x81\xee\x11\xd7\x61\xaa\xac\xd6\x76\xad\x4c\x0d\x81\x4a\x4f\xdc\x23\x3c\x03\xd5\x93\x89\x05\xe9\xc5\x97\x3e\xef\x37\x2b\x69\x9e\xf6\xa1\x0b\x08\x8d\x6b\xf9\xe8\x6d\x99\x9c\x8c\x19\x4f\x82\xb7\x3a\x01\x4f\x28\xad\xd1\x9b\x3c\x19\xae\x12\x58\xa1\x6e\x29\x4f\xb6\xdb\xf1\x3b\xda\x8c\xfb\x6e\x3f\x22\xe3\x1f\xa8\xfe\x51\x13\x06\x82\x9a\xb8\xe3\x21\xc2\x86\xca\xdb\xe6\x1b\x4e\xf8\x91\xe8\x11\x17\x60\x19\xd3\xf3\x24\xed\x1e\xd7\x29\xaf\xed\x7d\x85\x25\x5b\x7f\x1f\x0b\xa6\x2b\xd4\x4a\x22\x53\x02\x0d\xf1\xd2\xca\x3c\x71\x36\xf0\x25\xb9\x7e\x56\xd7\x83\x2c\x50\x59\x1f\x5f\x28\x92\x92\xc5\x77\xa5\x39\x93\xc7\xb4\x4d\x11\xbf\x73\x2e\x0a\x64\xb0\xa1\xa1\xec\xf9\x98\xe7\x8e\xec\xc2\x45\xcb\x6c\xcd\x50\xb0\x60\x03\x05\x1b\xe1\xbc\x6a\xd0\x6f\x92\xc5\x97\xb6\x68\x14\xcf\xd3\x3e\xed\xa9\xae\xb1\xff\x25\x61\xe7\xa9\xd5\x8b\xd1\xbe\xe5\xe9\x97\x5a\x65\x2d\x1f\xbe\xd4\xb6\x5b\x20\x23\x61\xb7\xfb\x2b\x00\x00\xff\xff\x56\x7b\xa0\x59\xe6\x09\x00\x00")

func viewAdminTwo_factor_auth_keyTmplBytes() ([]byte, error) {
	return bindataRead(
		_viewAdminTwo_factor_auth_keyTmpl,
		"view/admin/two_factor_auth_key.tmpl",
	)
}

func viewAdminTwo_factor_auth_keyTmpl() (*asset, error) {
	bytes, err := viewAdminTwo_factor_auth_keyTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "view/admin/two_factor_auth_key.tmpl", size: 2534, mode: os.FileMode(420), modTime: time.Unix(1522048306, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _viewAdminUserTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x57\x51\x6f\xdb\x36\x10\x7e\xcf\xaf\xb8\x11\x7e\x48\x80\xc9\x6a\x57\xa0\x0f\xad\xa4\x22\x68\xba\x21\x0f\x0d\x82\x65\x7b\x2e\x68\xf1\x64\x71\xa5\x48\x8d\x3a\x29\x31\x04\xfd\xf7\x81\xb4\xec\x48\xb6\xa4\x79\x58\xfd\x10\x4b\xbc\xef\x3e\xde\x7d\x77\xe6\x31\x6d\x0b\x02\x33\xa9\x11\x58\x6a\x34\xa1\x26\x06\x5d\x77\x75\xd5\xb6\x40\x58\x94\x8a\x13\x02\xcb\x91\x0b\xb4\x0c\xd6\xde\x14\x55\xb4\x53\x08\xb4\x2b\x31\x66\x84\x2f\x14\xa6\x55\xc5\x92\x2b\x00\x00\xcd\x1b\x68\xfd\x93\xfb\x14\xdc\x6e\xa5\x0e\x36\x86\xc8\x14\x1f\xe0\xed\x9b\xf2\xe5\xa3\x37\x76\x57\x51\xe8\x59\x12\x47\x97\x5a\x59\xd2\x90\xef\x2f\xde\xf0\xfd\x6a\x4f\xbb\xba\xce\x6a\x9d\x92\x34\x1a\xae\x6f\x06\x1b\xac\xae\xd9\x3a\x35\x3a\x93\xb6\x08\x04\x2a\x24\x64\x37\xeb\x54\xc9\xf4\xfb\x8c\x83\xfb\xc8\x0c\xae\x7f\xea\xbd\xae\xd9\xad\x45\xd8\x99\x1a\xaa\xba\x7f\x78\xe6\x9a\x80\x0c\xec\xf9\x3e\xb1\x9b\x53\x7f\xf7\xb1\x48\xb5\xd5\x90\x71\x55\xe1\xc7\x91\xb5\x3b\xbe\x75\x37\x7d\xb2\x37\x1f\x5d\xba\x3e\x1f\x97\xaf\x90\x0d\xa4\x8a\x57\x55\xec\x25\xe7\x52\xa3\x0d\x32\x55\x4b\xd1\x67\x3b\xa1\xfd\x37\x2e\x0a\xa9\x0f\x15\x70\xa0\x31\x8d\x0a\x0a\x11\xbc\x7d\x03\x99\xb1\x45\xb0\xb5\xa6\x2e\x7b\x2e\x0f\x75\xab\xc0\xbd\x1c\x31\x0b\x3d\x55\x58\x57\x68\xc3\x4a\x6e\xf5\xb7\xba\x64\x50\x20\xe5\x46\xc4\xac\x34\x15\x0d\x3c\xbd\x77\xfe\x2e\x79\xc0\x67\x70\x0e\xe0\x1c\xa0\x2e\xa3\x30\x7f\x77\x82\x1a\x84\x33\x19\xc4\x11\xa8\xf8\x06\x95\x0b\x34\x66\x52\x97\x35\x7d\x29\xb8\x54\x6c\xa8\x88\x35\x2a\xf0\x28\x96\x78\x63\x14\xfa\xb7\x09\x2e\x4f\xd0\x77\x0e\xee\x79\x34\x2f\x30\x66\x23\x4e\x1f\x4f\x4f\x0c\xbd\x56\xef\x19\x48\x31\x8e\xa0\x54\x3c\xc5\xdc\x28\x81\x36\x66\xfd\x9a\xc5\xbf\x6b\x69\x51\x9c\x24\x1b\x0a\xd9\xfc\xa8\xfc\x1f\x79\x55\x3d\x1b\x2b\xe6\x24\x38\xd8\xe7\x55\x38\xdd\xda\x9a\xe7\x89\x8d\xe7\xa3\x7c\xd5\x64\xda\xeb\x4c\xea\xf2\x18\xf2\x5e\xed\xf2\x34\x85\xa1\xe2\x03\xa1\x5f\x53\x1d\x69\xfd\xba\x7c\x90\x1b\x0a\xa9\x15\xea\x2d\xe5\x31\x5b\x8c\xaa\x2a\xb8\x52\x87\x5d\xdd\xd9\x11\x14\x35\xa1\x60\xc9\x57\xa9\x65\x51\x17\x60\x32\x78\x0f\x69\xce\x2d\x4f\x09\x6d\x15\x85\xde\x63\x46\x9d\xf3\xb2\xce\x55\xfb\xff\x34\xc0\xa6\x26\x32\xfa\x80\xdd\x90\x86\x0d\xe9\xa0\xb4\xb2\xe0\x76\xc7\x92\xa7\x7a\x53\x48\x8a\xc2\x3d\x6c\x71\xdf\x28\x74\x3b\xed\xdf\x7b\xd3\xfe\x39\xb7\xc9\xfc\x29\xf1\xcb\xf0\x68\xd0\xfc\x34\x8f\xfa\xa8\x67\xc9\xb7\x52\x73\x77\x6a\x4c\xf6\xb1\x1c\xe0\x30\x90\x84\x05\x4b\x22\x3e\x5a\x54\x52\x7f\x67\x90\x5b\xcc\x62\xf6\xc9\x64\x59\x85\x14\xb7\xed\xfa\xcf\x0a\xed\xe3\x9e\x1c\xd7\x8f\x16\x9b\xae\x63\x89\xfb\x8e\x42\x9e\x44\xa1\x92\xe7\xdb\xb5\xad\xe5\x7a\x8b\xb0\x92\x3f\xc3\xaa\x81\x0f\x31\x9c\xb0\xf0\x2d\x56\x5d\x37\x59\xd7\xb6\x95\x19\xac\xc6\xf8\xfb\xea\x73\x6d\x2d\x6a\x82\x95\x9c\x71\x9b\xcb\xd2\x9f\xa4\x0d\xb2\x24\xaa\x4a\xae\xcf\xf3\x4d\xda\x76\xd5\x74\x5d\x14\x3a\xf3\x4c\x3a\xfb\xb0\x50\x55\xf8\x1f\x37\xbf\x50\x62\x97\xd4\x6b\x20\x73\xa2\xf6\x51\x68\x31\x11\xc4\xdc\xfa\x0f\xab\xfb\x03\xbe\x90\x0b\xd2\x7d\x4f\x87\x18\x85\xb5\x1a\x36\xfb\xa8\x57\x23\xe2\x1b\x85\xc7\x9f\xbe\x7f\xf1\x7f\x83\xdc\x34\x68\x4f\x87\x18\xb9\x39\x3a\xd1\xc5\x64\x67\xce\x02\xca\x93\xfb\xbb\x28\xa4\x7c\xde\xfe\xd5\xcf\xa6\x25\xc4\xef\x46\xe1\x32\xe2\x89\x38\xe1\x1f\xcf\xe6\x57\x9e\x92\xb1\xb7\x35\xe5\xcb\xf8\xcf\x16\x39\xa1\xb8\xa5\x65\xd8\xb4\x35\x0a\x4f\xd3\x75\xb8\x33\x61\x22\xda\x18\xb1\x9b\xff\x0d\x8e\xeb\xf8\xa4\x64\x3a\xd5\xc5\x0b\xd2\x8a\xa4\x6d\xd7\xf7\x77\xae\x35\x69\xa2\x28\x03\xd0\x1d\xa6\x76\x57\x92\x53\x1a\x56\xeb\x2f\xba\xb9\x2d\xcb\x0b\xdc\x7e\x43\x72\xd2\x3f\xf0\x02\x2f\x40\x9f\xd7\xe0\x02\xa7\x63\x21\x96\xb1\x33\x35\x82\xc5\x6b\x59\x7f\x95\x5d\xba\x95\x9d\x91\x0d\xe7\x73\x2e\x85\x40\x7d\x98\xce\x52\x30\x68\xb8\xaa\x31\x66\xbd\xec\xff\xc6\x35\x9e\x50\xe3\x0b\x36\x1c\x06\x96\x70\xbd\x60\x59\x72\xe7\x97\xa7\xe7\xd5\x88\x75\x30\xac\xce\x6d\x97\xb5\x2b\xcc\x1c\x4c\x51\x78\xd2\xb2\x51\xe8\xcf\x82\xd1\x68\x3c\x4c\xc8\xd1\xf5\x3a\x33\x86\x5e\xff\xb5\x69\x5b\x40\x2d\xa0\xeb\xfe\x09\x00\x00\xff\xff\x27\xf4\xb8\x5e\x17\x0d\x00\x00")

func viewAdminUserTmplBytes() ([]byte, error) {
	return bindataRead(
		_viewAdminUserTmpl,
		"view/admin/user.tmpl",
	)
}

func viewAdminUserTmpl() (*asset, error) {
	bytes, err := viewAdminUserTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "view/admin/user.tmpl", size: 3351, mode: os.FileMode(420), modTime: time.Unix(1522048010, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _viewAuthIndexTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x92\xc1\x6e\x83\x30\x0c\x86\xef\x3c\x85\xe5\x7b\xc7\x0b\x00\xf7\xdd\x26\xed\x01\xa6\x40\x4c\xb1\x94\x38\x51\x62\x3a\x55\x88\x77\x9f\xa0\xb4\x94\x49\xd5\x0e\xbb\x44\x4e\xf2\xfb\xff\xfd\x49\x9e\x26\xb0\xd4\xb3\x10\x60\x17\x44\x49\x14\x61\x9e\x8b\x62\x9a\x40\xc9\x47\x67\x94\x00\x07\x32\x96\x12\xc2\xdb\xfa\x55\x59\xbe\x40\xe7\x4c\xce\xf5\xda\x63\x58\x28\x9d\x7a\x37\xb2\xc5\xa6\x00\x00\xa8\xfa\x90\xfc\x5d\xb2\xd4\xa7\x73\x0a\x63\x44\x30\x9d\x72\x90\x1a\x4b\x33\xea\x50\x66\x3e\xcb\x17\x0b\x82\x27\x1d\x82\xad\x31\x86\xac\x9b\xc5\x6a\xf3\x14\xf4\xe4\xb2\x0b\x56\x91\x33\x2d\x39\xe8\x43\xaa\xd1\x1b\x76\xd8\x2c\x67\x55\xae\xcf\xbf\xa4\x2c\x71\x54\xd0\x6b\xa4\x1a\x69\x15\x1f\xec\x17\x98\x14\x1c\x02\xdb\xcd\x0b\xc4\x78\xba\xd7\xd1\x99\x8e\x86\xe0\x2c\x3d\xa2\xf6\x51\x4b\xcb\x97\x7f\x4c\x1e\x4d\xce\xdf\x21\x59\x6c\x3e\xb6\xea\x6f\x82\x47\xcf\x6b\x88\x5d\x72\x03\xd9\xef\x07\x98\x3d\xfd\x25\x50\x3b\xaa\x06\xd9\x92\xf3\xd8\x7a\xd6\x47\x6e\xab\x02\xad\xca\x29\x26\xf6\x26\x5d\xb1\xf9\xe4\xb3\xbc\x4b\x55\xde\x9a\xb6\x9d\x28\x97\xf1\x9a\x62\x33\x3e\x2e\x58\x1f\x82\xee\x0b\x36\x4d\x40\x62\x61\x9e\x7f\x02\x00\x00\xff\xff\x2e\x2f\xc5\xf9\x9d\x02\x00\x00")

func viewAuthIndexTmplBytes() ([]byte, error) {
	return bindataRead(
		_viewAuthIndexTmpl,
		"view/auth/index.tmpl",
	)
}

func viewAuthIndexTmpl() (*asset, error) {
	bytes, err := viewAuthIndexTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "view/auth/index.tmpl", size: 669, mode: os.FileMode(420), modTime: time.Unix(1520592654, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _viewAuthLogged_inTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x93\xc1\x8e\x9b\x30\x10\x86\xef\x3c\xc5\xc8\xf7\x09\x49\xa5\xbd\xb4\x90\x1e\xda\x73\x5b\x69\x1f\xa0\x32\x30\x80\x5b\x7b\x8c\xec\x21\x1b\x64\xf1\xee\x15\x84\xec\xd2\x84\x8b\x07\x86\xff\xf3\x3f\xbf\xe5\x94\xa0\xa1\xd6\x30\x81\xaa\x3d\x0b\xb1\x28\x98\xe7\x2c\x4b\x09\x84\xdc\x60\xb5\x10\xa8\x9e\x74\x43\x41\xc1\x61\x6d\x15\x51\x26\x4b\x20\xd3\x40\xa5\x12\xba\x4a\x5e\xc7\xa8\xce\x19\x00\x00\xeb\x0b\xa4\xb5\x5a\x1e\xa7\x43\x67\x18\x2b\x2f\xe2\xdd\x67\x38\x1d\x87\xeb\x97\xb5\x39\x67\x45\xbe\x52\xce\x59\x56\x34\xe6\x02\xb5\xd5\x31\x96\xab\x05\x6d\x98\x02\xb6\x76\x34\xcd\x06\x2d\x16\xea\xf6\x07\xeb\x4b\xa5\x03\xdc\x16\xa4\xeb\xa0\xb9\xc1\xe8\xa0\xea\xb0\xd1\xe1\xef\xbd\xb1\xd6\x7f\xc6\x28\xa6\x9d\x70\x1b\x0c\x89\xef\xc4\x95\xda\xfa\xe0\xee\x58\x37\xe1\x27\x70\x13\xda\x0e\x8f\x0a\x74\x2d\xc6\x73\xa9\x72\x3d\x4a\x9f\x47\xd3\xf1\x6f\x3f\x8a\x02\x47\xd2\xfb\xa6\x54\x83\x8f\xb2\x23\xad\xb4\x6a\x14\xf1\x7c\xe7\x55\xc2\x50\x09\xa3\x1f\xc5\x1a\x26\x34\xdc\x7a\xb8\x6f\x12\x1d\x1e\xd5\xf9\xd5\x74\xfc\x73\x94\x22\xbf\x29\x77\xc6\xf2\xc5\xd9\x36\x7a\xce\xfa\x72\xce\x6e\xf5\x2e\x28\x6b\xa2\x60\x17\xfc\x38\xec\x7c\xa4\x14\x34\x77\x04\x87\x5f\xc1\x5f\xa7\x6f\x9e\xdb\x57\x6b\x6a\x9a\xe7\x0f\xb4\x86\x3e\x50\x5b\xaa\xaf\xac\x1d\x95\x29\x1d\x7e\x68\x47\xf3\xac\x9e\xb9\x68\x84\x1c\x3c\xbc\xe3\x2d\x19\x68\x2d\x5d\xb1\xf6\x76\x74\x0c\xda\x9a\x8e\xd7\x6e\xc4\x28\x3a\x3c\x25\xb3\xb3\xdd\xe0\xa2\x84\x37\x3c\x1d\x8f\x4f\xc7\x53\x91\xbc\x11\xf1\x83\x7c\x45\xf4\x2f\xef\x07\x55\xe1\x49\x9d\xdf\x8d\x17\x79\xff\xf2\xb0\x5d\xde\x98\xcb\xc3\xa7\xe1\x49\xfd\x9d\x62\x1d\xcc\xb0\x0c\xb3\x40\x86\x7d\xfa\x7a\x9f\x28\x71\xb3\xe5\xb7\x81\xb7\xe5\xff\x0b\xd2\x7a\x2f\x1f\x17\x24\x25\x20\x6e\x60\x9e\xff\x05\x00\x00\xff\xff\x01\x5c\x56\x87\x5d\x03\x00\x00")

func viewAuthLogged_inTmplBytes() ([]byte, error) {
	return bindataRead(
		_viewAuthLogged_inTmpl,
		"view/auth/logged_in.tmpl",
	)
}

func viewAuthLogged_inTmpl() (*asset, error) {
	bytes, err := viewAuthLogged_inTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "view/auth/logged_in.tmpl", size: 861, mode: os.FileMode(420), modTime: time.Unix(1520592654, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _viewAuthTwo_factor_authTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x90\x41\x8e\xab\x30\x0c\x86\xf7\x9c\xc2\xf2\xbe\x8f\x0b\x00\x9b\x77\x84\x39\x40\x65\x88\x99\x46\x4a\xec\x28\x75\x3a\xaa\x22\xee\x3e\x22\x43\x55\x66\x96\x4e\x3e\x7f\xb6\xff\x5a\xc1\xf1\xea\x85\x01\x17\x15\x63\x31\x84\x6d\xeb\xba\x5a\xc1\x38\xa6\x40\xc6\x80\x37\x26\xc7\x19\xe1\x5f\xfb\x1a\x9c\x7f\xc0\x12\xe8\x7e\x1f\x5b\x0f\x79\xe1\x7c\x59\x43\xf1\x0e\xa7\x0e\x00\x60\x58\x35\x47\xa0\xc5\xbc\xca\x88\x3d\x15\xbb\xf5\xf6\xa5\xd7\x95\x16\xd3\x7c\x6d\xf5\x83\x82\x77\x64\x8c\x10\xd9\x6e\xea\x46\x4c\x7a\xb7\x43\xd0\x24\xa7\x31\xbb\xef\xf2\x99\xb5\xa4\x13\xd0\xa0\x40\x33\x07\x58\x35\xef\xbb\x38\xc6\xe9\xbf\x3a\x1e\xfa\xf6\xfc\x07\xf5\x92\x8a\x81\x3d\x13\x8f\x28\x25\xce\xfb\x45\x67\xff\x7e\x4b\xd6\x80\x20\x14\xf9\xa5\x7b\xaf\xd3\x3b\xff\x38\x95\x73\x31\x53\x79\x09\x66\x13\x98\x4d\x2e\x29\xfb\x48\xf9\x89\xd3\x47\x99\xa3\xb7\xa1\xff\xc1\x8e\x58\xfa\x7d\xce\xd4\x1d\xaa\xdf\x19\xaf\xaa\xf6\xce\xb8\x56\x60\x71\xb0\x6d\xdf\x01\x00\x00\xff\xff\x78\x9b\xc2\xae\xa0\x01\x00\x00")

func viewAuthTwo_factor_authTmplBytes() ([]byte, error) {
	return bindataRead(
		_viewAuthTwo_factor_authTmpl,
		"view/auth/two_factor_auth.tmpl",
	)
}

func viewAuthTwo_factor_authTmpl() (*asset, error) {
	bytes, err := viewAuthTwo_factor_authTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "view/auth/two_factor_auth.tmpl", size: 416, mode: os.FileMode(420), modTime: time.Unix(1520592654, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _viewIndexTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x92\xdd\x69\xc3\x30\x10\xc7\xdf\x3d\xc5\x71\xef\xa9\x17\xb0\x3d\x43\x37\x28\xb2\x75\x4e\x0e\x64\x9d\x90\xce\x29\xc1\xf8\x25\x5d\xa5\x1b\x94\x4e\x94\x45\x8a\x1d\x11\x27\x85\xd0\x87\xbe\x1c\x42\xfa\x7f\xfc\x84\x34\x4d\x60\xa9\x67\x4f\x80\x9d\x78\x25\xaf\x08\xf3\x5c\x14\x95\xe5\x23\x74\xce\xa4\x54\xaf\x07\x86\x3d\xc5\x5d\xef\x46\xb6\xd8\x14\x00\x00\x55\x2f\x71\x00\xd3\x29\x8b\xaf\xb1\x34\xa3\x1e\xca\xc4\x7b\xff\xc6\x1e\x61\x20\x3d\x88\xad\x31\x48\xd2\xac\x5f\x3d\x77\xa9\x8b\x7d\xb7\x8f\x32\x86\x3b\xc1\x2a\x72\xa6\x25\x07\xbd\xc4\x1a\x07\xc3\x0e\x9b\x65\x56\xe5\xba\xfd\x4b\xca\x3e\x8c\x0a\x7a\x0a\x54\x23\xad\xe2\x87\xf8\x85\x3c\x8a\x43\x60\x9b\xb3\x20\x38\xd3\xd1\x41\x9c\xa5\x5b\xfc\x86\x57\x5a\x3e\xfe\x83\x36\x98\x94\xde\x25\x5a\x6c\x5e\xf3\xea\x6f\xea\x9b\xe7\x39\xf8\x26\x79\x80\xdf\xda\x9e\x5e\xa0\x1d\x55\xc5\xe7\xa6\x34\xb6\x03\xeb\xad\xa7\x55\x0f\xad\xfa\x5d\x88\x3c\x98\x78\xc2\xe6\x72\xfe\xbe\x9c\x3f\x2f\x1f\x5f\xd7\x59\x95\x57\x77\x7e\xed\x72\xe1\x6a\x8a\xdc\x50\x4c\x13\x28\x0d\xc1\x19\x25\xc0\x5e\x44\x29\x22\xbc\xac\x5f\x67\x9a\x80\xbc\x85\x79\xfe\x09\x00\x00\xff\xff\x28\x69\x18\xbd\x5c\x02\x00\x00")

func viewIndexTmplBytes() ([]byte, error) {
	return bindataRead(
		_viewIndexTmpl,
		"view/index.tmpl",
	)
}

func viewIndexTmpl() (*asset, error) {
	bytes, err := viewIndexTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "view/index.tmpl", size: 604, mode: os.FileMode(420), modTime: time.Unix(1520592654, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"layout/footer.tmpl": layoutFooterTmpl,
	"layout/header.tmpl": layoutHeaderTmpl,
	"layout/header_admin.tmpl": layoutHeader_adminTmpl,
	"layout/layout.tmpl": layoutLayoutTmpl,
	"view/admin/index.tmpl": viewAdminIndexTmpl,
	"view/admin/logged_in.tmpl": viewAdminLogged_inTmpl,
	"view/admin/two_factor_auth_key.tmpl": viewAdminTwo_factor_auth_keyTmpl,
	"view/admin/user.tmpl": viewAdminUserTmpl,
	"view/auth/index.tmpl": viewAuthIndexTmpl,
	"view/auth/logged_in.tmpl": viewAuthLogged_inTmpl,
	"view/auth/two_factor_auth.tmpl": viewAuthTwo_factor_authTmpl,
	"view/index.tmpl": viewIndexTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"layout": &bintree{nil, map[string]*bintree{
		"footer.tmpl": &bintree{layoutFooterTmpl, map[string]*bintree{}},
		"header.tmpl": &bintree{layoutHeaderTmpl, map[string]*bintree{}},
		"header_admin.tmpl": &bintree{layoutHeader_adminTmpl, map[string]*bintree{}},
		"layout.tmpl": &bintree{layoutLayoutTmpl, map[string]*bintree{}},
	}},
	"view": &bintree{nil, map[string]*bintree{
		"admin": &bintree{nil, map[string]*bintree{
			"index.tmpl": &bintree{viewAdminIndexTmpl, map[string]*bintree{}},
			"logged_in.tmpl": &bintree{viewAdminLogged_inTmpl, map[string]*bintree{}},
			"two_factor_auth_key.tmpl": &bintree{viewAdminTwo_factor_auth_keyTmpl, map[string]*bintree{}},
			"user.tmpl": &bintree{viewAdminUserTmpl, map[string]*bintree{}},
		}},
		"auth": &bintree{nil, map[string]*bintree{
			"index.tmpl": &bintree{viewAuthIndexTmpl, map[string]*bintree{}},
			"logged_in.tmpl": &bintree{viewAuthLogged_inTmpl, map[string]*bintree{}},
			"two_factor_auth.tmpl": &bintree{viewAuthTwo_factor_authTmpl, map[string]*bintree{}},
		}},
		"index.tmpl": &bintree{viewIndexTmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

